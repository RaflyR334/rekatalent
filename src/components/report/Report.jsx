import React, { useState } from "react";
import { motion } from "framer-motion";
import { Download, Search, Eye } from "lucide-react";
import { jsPDF } from "jspdf";

const Report = () => {
  // Example report data
  const [reports, setReports] = useState([
    { id: 1, reportName: "Sales Report", date: "2024-11-20", generatedBy: "John Doe", status: "Completed", details: "Detailed information about Sales Report" },
    { id: 2, reportName: "Performance Report", date: "2024-11-21", generatedBy: "Jane Smith", status: "In Progress", details: "Detailed information about Performance Report" },
    { id: 3, reportName: "User Engagement", date: "2024-11-22", generatedBy: "Komeng Adul", status: "Completed", details: "Detailed information about User Engagement Report" },
    { id: 4, reportName: "Revenue Report", date: "2024-11-23", generatedBy: "Angga Yanto", status: "Completed", details: "Detailed information about Revenue Report" },
    { id: 5, reportName: "Marketing Analysis", date: "2024-11-24", generatedBy: "Dani Batubara", status: "In Progress", details: "Detailed information about Marketing Analysis Report" },
  ]);

  const [searchTerm, setSearchTerm] = useState(""); // State for the search term
  const [selectedReport, setSelectedReport] = useState(null); // State for showing the report details modal

  const handleSearch = (e) => {
    const term = e.target.value.toLowerCase();
    setSearchTerm(term);
  };

  // Filter reports based on the search term
  const filteredReports = reports.filter((report) => {
    return (
      report.reportName.toLowerCase().includes(searchTerm) ||
      report.generatedBy.toLowerCase().includes(searchTerm)
    );
  });

  // Function to download the report as PDF
  const downloadReport = (report) => {
    const doc = new jsPDF();
    
    // Set up title
    doc.setFontSize(16);
    doc.text("Report: " + report.reportName, 20, 20);
    
    // Add report details
    doc.setFontSize(12);
    doc.text("Date: " + report.date, 20, 30);
    doc.text("Generated By: " + report.generatedBy, 20, 40);
    doc.text("Status: " + report.status, 20, 50);
    doc.text("Details: " + report.details, 20, 60);

    // Save the PDF
    doc.save(`${report.reportName}.pdf`);
  };

  const showReportDetails = (report) => {
    setSelectedReport(report); // Set the selected report to show details
  };

  const closeModal = () => {
    setSelectedReport(null); // Close the modal by resetting the selected report
  };

  return (
    <motion.div
      className="bg-gray-800 shadow-lg rounded-xl p-6 border border-gray-700"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: 0.2 }}
    >
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-xl font-semibold text-gray-100">Report List</h2>
        <div className="relative">
          <input
            type="text"
            placeholder="Search reports..."
            className="bg-gray-700 text-white placeholder-gray-400 rounded-lg pl-10 pr-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            onChange={handleSearch}
            value={searchTerm}
          />
          <Search className="absolute left-3 top-2.5 text-gray-400" size={18} />
        </div>
      </div>

      {/* Table to display reports */}
      <div className="overflow-x-auto">
        <table className="min-w-full divide-y divide-gray-700">
          <thead>
            <tr>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Actions</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Report Name</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Date</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Generated By</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Status</th>
            </tr>
          </thead>
          <tbody className="divide-y divide-gray-700">
            {filteredReports.map((report) => (
              <motion.tr
                key={report.id}
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ duration: 0.3 }}
              >
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
                  <div className="flex items-center space-x-3">
                    {/* Show Button */}
                    <button
                      onClick={() => showReportDetails(report)}
                      className="text-indigo-400 hover:text-indigo-300"
                      aria-label="Show Report Details"
                    >
                      <Eye size={18} />
                    </button>
                    {/* Download Button */}
                    <button
                      onClick={() => downloadReport(report)}
                      className="text-blue-400 hover:text-blue-300"
                      aria-label="Download Report"
                    >
                      <Download size={18} />
                    </button>
                  </div>
                </td>
                <td className="px-6 py-4 whitespace-nowrap">{report.reportName}</td>
                <td className="px-6 py-4 whitespace-nowrap">{report.date}</td>
                <td className="px-6 py-4 whitespace-nowrap">{report.generatedBy}</td>
                <td className="px-6 py-4 whitespace-nowrap">{report.status}</td>
              </motion.tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* Modal for showing report details */}
      {selectedReport && (
        <motion.div
          className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.3 }}
        >
          <div className="bg-gray-900 p-6 rounded-lg w-96 text-center">
            <h3 className="text-lg font-semibold text-gray-100 mb-4">{selectedReport.reportName}</h3>
            <p className="text-gray-300">{selectedReport.details}</p>
            <div className="mt-4 flex justify-center gap-4">
              <button
                onClick={closeModal}
                className="bg-gray-600 hover:bg-gray-500 text-white px-6 py-2 rounded-lg"
              >
                Close
              </button>
            </div>
          </div>
        </motion.div>
      )}
    </motion.div>
  );
};

export default Report;
